<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAASUkqAAgAAAAAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCAA7ADoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3/OK4Pxj8TtP8OSNZ
        Wi/bdQx9xT8qf7x/pU/jjxXBps1rocd2lvd3+QZif9Sn97/CvH/EXgbVPD267J+3WUh3C8i+bOf73pXR
        hqcKk7TZNTnjHmSO7/4SvVtZ+F+parPMIboThFMGV2jI4FcCviXWFx/xMbk/WVjXSaSf+LL6kf8Ap5H/
        AKEtcMeleZmXuV3GOx9LkcIzwzcld3/RHq8fi7UNM+GlhqvmtJO1wUZmO4kZPrW94X+Iljre2GcrFP8A
        oa4DUv8AkjGn/wDX2f5muH06G9mvF+wK5mX5srwFHqT2FevhKEKmGUpaPufO46Thipxjtdn1cCCAQcg0
        3vXF+BfEq30A02e6S4u4Rh2j5UewPeu0PWuPS+juOUJQ0krM8Tl8Pat4v8R6nrEj6e9lJMYIkmlKuirw
        Cpxx6+lb2j+HPEnh26MFnqdheaYeDBcSdu+PSvFtJkeSwWRmYsxJPPer25v7zfma4amJi5fDqj6LD5bU
        9lbnun0av+p7N4z0/TtL+HuoQ2McMPmyJI8UT5G4sM4rxjtS5J6sce5pAQQCDkHoa5q9X2suY9DA4T6r
        TcL31uep6LoEfiX4Y2Ni12kBSdpCCQCwBPHtVZPh5qc0i2ZvbCx0zPzJbybmYf7RPU15tkjoxH0NGW/v
        N+Zrf623TVNrReZy/wBltVpVoyV35Xt+J7xaaGvhyKC38OpYgMR9ouJ5f3jfSuuVjsGcZxzg18uQM4uI
        jubhx3Ne3W13ILWEbj9xf5VvSxCkrJWseZjculSkpSnds898N/DlNTm1C0j1aOCa0uXRoDHlgueD16Vf
        n+HNhazNDP4qs45V6oygEfrWv8RLbV/D+qnVdHlFvaaiBFey4x5RHRie3H8q85k1W0sHLad/pd4Tlr2Y
        ZAP+wp/ma0jg/bVLQj6voRTzGdOjedS1tEklc6fX/h2dE0CbVV1aO5SPb8qx4zkgdc+9cR2rvNPlluPg
        5qks0jySNdAs7nJPK1wfauLG0VRq8iPZyrE1MRQc6ju7nb+Hvh22vaAmrHVEto23ZVo87QDjrmrEHw60
        +5lEUPiuzkc/wqoJ/nVq01698O/CnTr2xKb/ALUysrjKspJyDVSJfDvjdhNYyDRdeHzeXnCSN6g11Rwb
        dFVYxujzZ5lNYidKdTlSbtomJB4C0r7QgXxbYsyt90AZ/nXp0Hh1Et4088NtQDIHXivOtA8H3114lWHW
        dPKS2+GN3HwsgB6Hs2fzr2MAKAoHA4rSFOkop00/O5xYrEYhy5akk7bWI76xt9RspbS6iWSCVSrqw4IN
        fP8A4x+GWqeGbh7rSYpL7Sj821RmSL2x3FfRFIQCMEZFdFOrKm7xPPlFSVmeB6Pf2zfB7UoDMiz/AGkE
        xMcMOV7Vx25SOor6C8T+FNB1G1ke60u3d3I3MBtJ/EYNcLN4H8OJcBF00BfTzpP/AIquTFUnXqc97Hr5
        fmEcJS9m431MvVJY1+DOn5dc/azxn3Nc/wCGPB2s+KLmM2kDwWoYbrqQFQB/s+pr2Tw/4S0GKAQjTYnj
        Q7lWQlwp9RuJrs4o0jQIiKqjoFGBXdQxEqNJU4nlYhKtWlV7sq6Vp40zTYLTzpJvKQL5krZZvcmrXen0
        zvWAH//Z
</value>
  </data>
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAASUkqAAgAAAAAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCABAAEADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+gnFFYXibxNZ+G9O
        Nzckl24jjH3nPoKTdldlRjKclGKu2bUkscYJdgAPWsW68X6JaOUkv4Qw7bhXnskt1r0X9o+JdU/s+wY5
        js4Wyzj+v1rLudT8OQjyrDTV2D+OWTJNc08TbZHuYbJXN2m3fyWi+bsr+lz1W38X6JdNtjv4t3oWAraj
        mjlUMjAgjtXzvczWdxyEjQ/Wp9M8T6n4emD2tx5sIPzQu+VP+FRDF3dpI6cRw3NQ5qErvs/89j6FBzRW
        B4X8UWXiTThcW5w44dD1U+lb4ORXYmnsfNSjKEnGSs0RyyCKJnY4AGa4iytLbXNQk1nULeOcIStusq7g
        gz1APfiuh8VTtb+H7llJBKEVlWCiOxhiHACjNfOcRYudKEKcHa+r+RrQundFmSWJcv5aKvso6Vntrtqs
        4QXMPlj5XbzV+Rj91SM8E89+1UtYnMWn339qwC5smKIkMUeGO5sDljg9u1c5aiKWa5WXT47OO2VJWed2
        yM8KcqDgjB5/wrw8NgpYlvmu5P8Ayv1fmehTw6lBzlsu1vL/ADO/hulnj3o4dfUHIqRoLa5G2WCJwezR
        g1z9jGsGjQnRUSNZWLnzISc8ZJwCMH8K31JDD19q4cVhp4ebi01+Zg7J+7/wTDubG38P6h/aFhbRwEke
        b5Shd6+hA613cEwngSVSCGGa5zUohLa89uaueFpC+iRqf+WZKfkcV9Pw3i51KcqM3e2qOfEXb5mHiuFp
        /D10qjJCFh+ArC0S6W6tI2BByo/+vXazRLLC0bDIIxivK0uo/CuvPp19OkUUhLQNIwUMvp6d604hwk6t
        ONWCvyk0bt8qJL7S7nULOQtNebBKv7y4cgSt5xGAgPCgZGeMnmuWW/1C21tXlgL2twqLKqDKSIRuABbO
        Cufz5x1r0OFZL15Sb+1lt5CGQxtuK4bK+xrPl8JzS2yRC4G5QuJNpwNoxjHcH6/h68OFzGNKq5XWy36a
        JeXY9KNaMlappr/l+dlf8LFDTnlvbBWtYdQWK1DROI7k71G1mVguQGxkAg9hXW2Tl7O3cymXdEreYy7S
        2R1I7Z9O1ZVnol/plikFnPC0juXmlkDLztCjbj2FbauiqDPNEhwNx3gDPfGa4MxxX1uzWrbf6GVSUZSc
        YbC3ZCWErN0xVjwpGy6HFIf+WpL/AJnNc/qWo22s3cei6bcxzsSDOYmDBF9yO9dvbQLb26RKMBRjFe3w
        5hJ0oTqzVr6L5HHXunysmrnvFnhSy8U6Y1rdLhxzHIOqH1FdDQRnrX0rVzGMnF3T1Pm3VfC2qeG7hkvL
        bzoAfluI0yD9Rziq8BtpRw0eD9K+lZoIp1KSIGU9jWDd+CNBvH3yWEW49SFFcVTCJu8XY+lwvEc4R5a8
        ebzWh4msOnxjM0qEegArT07S77XGFvpNl5EJ4ed1xx7V6za+B9BtH3x2EWfdRW9DbRQIFjQKB0xThhLf
        E7ixPEU5q1GNvNv9DD8K+FrTw3YCGEEyNzI56sa6GiiuxJLY+clKU5OUnds//9k=
</value>
  </data>
</root>