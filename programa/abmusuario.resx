<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxlogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>